1 面向对象的主要思想：数据应该被封装，然后提供访问和修改它们的方法

2 Python内置类
1） 布尔类
默认构造函数bool()返回False
bool(foo) foo可为非布尔类型，结果取决于参数的类型，为数值型时，0返回False，否则True。对于序列和其他容器类型，为空返回False，否则True，
这种方式的一个重要应用是可以使用非布尔类型的值作为控制结构的条件

2） 整形类
0b1011 #二进制
0o52 #八进制
0x7F #十六进制
int(f) f为浮点值时，返回f的整数部分，如int(3.14) 返回3 int(-3.2) 返回-3
int(s) s为整数数值型的字符串时，返回整数，如int('137') 返回137，int('123.12') 报错 int('Hello') 报错ValueError 
如果为非二进制时，需要把进制作为第二个可选参数,如int('7f',16) 返回127

3）浮点类
float('3.14') 返回ValueError

4)序列类型：列表list、元组tuple、字符串str

5）集合类:set和frozenset
只有不可变类型才可以添加到集合中，因此整数、浮点数、字符串、元组都可以，而列表和集合都是可变的，不能作为集合的元素，
frozenset是集合类型的不可变形式，可以作为集合的元素

6)字典类dict

3 a+b，如果a和b为数值类型，则值相加，如果为字符串类型，则连接

4 对于整除// 和取模%，有如下规定：
设被除数n 除数m  q=n//m r=n%m，要保证n=q*m+r 并且规定，当m为正数时，0<=r<m,当m为负数时，m<r<=0

5 a+=3 和a=a+3的异同：
1) 当a为不可变类型时，比如为整数，两者结果一样，都是指向新的值
a=2
print(id(a)) #返回：140707284807984
a+=3
print(id(a))#返回：140707284808080，因为a为整形，是不可变类型，因此使用a+=3后，a将指向新的对象，而不是原地修改值，和a=a+3效果一样

2) 当a为可变类型时，比如为list，a+=3将原地修改值，及地址不变，而a=a+3将指向新的值，及地址已经改变
alpha=[1,2,3]
beta=alpha;
print(id(alpha)) #返回：2138779268488
print(id(beta)) #返回：2138779268488
beta+=[4,5]
print(id(alpha)) #返回：2138779268488
print(id(beta)) #返回：2138779268488
beta=beta+[6,7]
print(id(alpha)) #返回：2138779268488
print(id(beta)) #返回：2138768362440
print(alpha) #返回：[1, 2, 3, 4, 5]
print(beta) #返回：[1, 2, 3, 4, 5, 6, 7]
